package ${basePackageName}#if(${moduleName}).${moduleName}#end#if(${serviceImplConfig.packageSimpleName}).${serviceImplConfig.packageSimpleName}#end;

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import xxs.common.module.utils.bean.CommonBeanUtils;
import ${basePackageName}#if(${moduleName}).${moduleName}#end.${entityConfig.packageSimpleName}.${tableInfo.capitalizeTableName}${entityConfig.filePost};
import ${basePackageName}#if(${moduleName}).${moduleName}#end.${mapperInterfaceConfig.packageSimpleName}.${tableInfo.capitalizeTableName}${mapperInterfaceConfig.filePost};
import ${basePackageName}#if(${moduleName}).${moduleName}#end#if(${serviceInterfaceConfig.packageSimpleName}).${serviceInterfaceConfig.packageSimpleName}#end.${tableInfo.capitalizeTableName}${serviceInterfaceConfig.filePost};
import ${basePackageName}#if(${moduleName}).${moduleName}#end.${paramDTOConfig.packageSimpleName}.${tableInfo.capitalizeTableName}${paramDTOConfig.filePost};
import ${basePackageName}#if(${moduleName}).${moduleName}#end.${resultDTOConfig.packageSimpleName}.${tableInfo.capitalizeTableName}${resultDTOConfig.filePost};
#if(${tableInfo.tableRelationships})
#if(${mybatisPlus})
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import org.springframework.transaction.annotation.Transactional;
 #if(${tableInfo.tableRelationships})
     #foreach($relationTableInfo in ${tableInfo.tableRelationships})
import ${basePackageName}#if(${moduleName}).${moduleName}#end.${entityConfig.packageSimpleName}.${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost};
import ${basePackageName}#if(${moduleName}).${moduleName}#end.${paramDTOConfig.packageSimpleName}.${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost};
import ${basePackageName}#if(${moduleName}).${moduleName}#end.${resultDTOConfig.packageSimpleName}.${relationTableInfo.relationTable.capitalizeTableName}${resultDTOConfig.filePost};
import ${basePackageName}#if(${moduleName}).${moduleName}#end.${serviceInterfaceConfig.packageSimpleName}.${relationTableInfo.relationTable.capitalizeTableName}${serviceInterfaceConfig.filePost};
import ${tableInfo.keyColumnInfo.javaType.getName()};
        #if(${relationTableInfo.one2One})
        #else
import java.util.List;
import org.springframework.util.CollectionUtils;
        #end
     #end
 #end
#end
#end

/**
 * $!{tableInfo.comment}服务实现类
 *
 * @author ${author}
 * @since ${generateTime}
 */
@Service
public class ${tableInfo.capitalizeTableName}${serviceImplConfig.filePost}#if(${mybatisPlus}) extends ServiceImpl<${tableInfo.capitalizeTableName}${mapperInterfaceConfig.filePost}, ${tableInfo.capitalizeTableName}${entityConfig.filePost}>#end implements ${tableInfo.capitalizeTableName}${serviceInterfaceConfig.filePost} {
#if(${tableInfo.tableRelationships})
    #foreach($relationTableInfo in ${tableInfo.tableRelationships})
    @Autowired
    private ${relationTableInfo.relationTable.capitalizeTableName}${serviceInterfaceConfig.filePost} ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost};
    #end
#end

    /**
     * 列表
     */
    @Override
    public PageUtils get${tableInfo.capitalizeTableName}List(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}) {
        return null;
    }

    /**
     * 获取${tableInfo.capitalizeTableName}
     */
    @Override
    public ${tableInfo.capitalizeTableName}${resultDTOConfig.filePost} get${tableInfo.capitalizeTableName}InfoBy${tableInfo.keyColumnInfo.capitalizePropertyName}(${tableInfo.keyColumnInfo.javaType.getSimpleName()} ${tableInfo.keyColumnInfo.propertyName}) {
        ${tableInfo.capitalizeTableName}${entityConfig.filePost} ${tableInfo.tableName}${entityConfig.filePost} = this.baseMapper.selectById(${tableInfo.keyColumnInfo.propertyName});
        ${tableInfo.capitalizeTableName}${resultDTOConfig.filePost} ${tableInfo.tableName}${resultDTOConfig.filePost} = this.entityTo${resultDTOConfig.filePost}(${tableInfo.tableName}${entityConfig.filePost});
        return ${tableInfo.tableName}${resultDTOConfig.filePost};
    }

#if(${tableInfo.tableRelationships})
    /**
     * 获取${tableInfo.capitalizeTableName} 和关联关系
     */
    @Override
    public ${tableInfo.capitalizeTableName}${resultDTOConfig.filePost} get${tableInfo.capitalizeTableName}InfoAndRelationBy${tableInfo.keyColumnInfo.capitalizePropertyName}(${tableInfo.keyColumnInfo.javaType.getSimpleName()} ${tableInfo.keyColumnInfo.propertyName}) {
        ${tableInfo.capitalizeTableName}${entityConfig.filePost} ${tableInfo.tableName}${entityConfig.filePost} = this.baseMapper.selectById(${tableInfo.keyColumnInfo.propertyName});
        ${tableInfo.capitalizeTableName}${resultDTOConfig.filePost} ${tableInfo.tableName}${resultDTOConfig.filePost} = this.entityTo${resultDTOConfig.filePost}(${tableInfo.tableName}${entityConfig.filePost});
        this.get${tableInfo.capitalizeTableName}RelationBy${tableInfo.keyColumnInfo.capitalizePropertyName}(${tableInfo.tableName}${resultDTOConfig.filePost});
        return ${tableInfo.tableName}${resultDTOConfig.filePost};
    }


    /**
     * 根据${tableInfo.keyColumnInfo.capitalizePropertyName}获取和${tableInfo.capitalizeTableName}的关联关系
     */
    private void get${tableInfo.capitalizeTableName}RelationBy${tableInfo.keyColumnInfo.capitalizePropertyName}(${tableInfo.capitalizeTableName}${resultDTOConfig.filePost} ${tableInfo.tableName}${resultDTOConfig.filePost}) {
        ${tableInfo.keyColumnInfo.javaType.getSimpleName()} relation${tableInfo.keyColumnInfo.capitalizePropertyName} = ${tableInfo.tableName}${resultDTOConfig.filePost}.get${tableInfo.keyColumnInfo.capitalizePropertyName}();
    #foreach($relationTableInfo in ${tableInfo.tableRelationships})
    #if(${mybatisPlus})
        #if(${relationTableInfo.one2One})
        #*一对一*#
        ${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost} ${relationTableInfo.relationTable.tableName}${entityConfig.filePost} = ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.getOne(Wrappers.<${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}>lambdaQuery().eq(${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::get${relationTableInfo.relationColumnInfo.capitalizePropertyName}, relation${tableInfo.keyColumnInfo.capitalizePropertyName}));
        ${tableInfo.tableName}${resultDTOConfig.filePost}.set${relationTableInfo.relationTable.capitalizeTableName}${resultDTOConfig.filePost}(CommonBeanUtils.copyProperties(${relationTableInfo.relationTable.tableName}${entityConfig.filePost}, ${relationTableInfo.relationTable.capitalizeTableName}${resultDTOConfig.filePost}::new));
        #else
        #*一对多*#
        List<${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}> ${relationTableInfo.relationTable.tableName}${entityConfig.filePost}List = ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.list(Wrappers.<${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}>lambdaQuery().eq(${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::get${relationTableInfo.relationColumnInfo.capitalizePropertyName}, relation${tableInfo.keyColumnInfo.capitalizePropertyName}));
        ${tableInfo.tableName}${resultDTOConfig.filePost}.set${relationTableInfo.relationTable.capitalizeTableName}${resultDTOConfig.filePost}List(CommonBeanUtils.copyListProperties(${relationTableInfo.relationTable.tableName}${entityConfig.filePost}List, ${relationTableInfo.relationTable.capitalizeTableName}${resultDTOConfig.filePost}::new));
        #end
    #end
#end
    }
#end

    /**
     * 保存${tableInfo.capitalizeTableName}
     */
    @Override
    public int add${tableInfo.capitalizeTableName}(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}) {
#if(${genValidMethod})
        this.saveOrUpdateValid(${tableInfo.tableName}${paramDTOConfig.filePost}, true, false);
#end
        ${tableInfo.capitalizeTableName}${entityConfig.filePost} ${tableInfo.tableName}${entityConfig.filePost} = this.paramToEntity(${tableInfo.tableName}${paramDTOConfig.filePost});
        return this.baseMapper.insert(${tableInfo.tableName}${entityConfig.filePost});
    }

#if(${tableInfo.tableRelationships})
    /**
     * 保存${tableInfo.capitalizeTableName}和关联关系
     */
    @Transactional(rollbackFor = Exception.class)
    @Override
    public int add${tableInfo.capitalizeTableName}AndRelation(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}) {
#if(${genValidMethod})
        this.saveOrUpdateValid(${tableInfo.tableName}${paramDTOConfig.filePost}, true, false);
#end
        ${tableInfo.capitalizeTableName}${entityConfig.filePost} ${tableInfo.tableName}${entityConfig.filePost} = this.paramToEntity(${tableInfo.tableName}${paramDTOConfig.filePost});
        this.baseMapper.insert(${tableInfo.tableName}${entityConfig.filePost});
        ${tableInfo.keyColumnInfo.javaType.getSimpleName()} relation${tableInfo.keyColumnInfo.capitalizePropertyName} = ${tableInfo.tableName}Entity.get${tableInfo.keyColumnInfo.capitalizePropertyName}();
        this.add${tableInfo.capitalizeTableName}Relation(${tableInfo.tableName}${paramDTOConfig.filePost}, relation${tableInfo.keyColumnInfo.capitalizePropertyName});
        return 0;
    }

    /**
     * 批量添加关联关系
     */
    private void add${tableInfo.capitalizeTableName}Relation(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}, ${tableInfo.keyColumnInfo.javaType.getSimpleName()} relation${tableInfo.keyColumnInfo.capitalizePropertyName}) {
    #foreach($relationTableInfo in ${tableInfo.tableRelationships})
        #if(${mybatisPlus})
            #if(${relationTableInfo.one2One})
            #*一对一 *#
        ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.save(CommonBeanUtils.copyProperties(${tableInfo.tableName}${paramDTOConfig.filePost}.get${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}(),${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::new,(s, t)->{
            t.set${relationTableInfo.relationColumnInfo.capitalizePropertyName}(relation${tableInfo.keyColumnInfo.capitalizePropertyName});
        }));
            #else
            #*一对多*#
        if (!CollectionUtils.isEmpty(${tableInfo.tableName}${paramDTOConfig.filePost}.get${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}List())) {
           ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.saveBatch(CommonBeanUtils.copyListProperties(${tableInfo.tableName}${paramDTOConfig.filePost}.get${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}List(),${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::new,(s, t)->{
           t.set${relationTableInfo.relationColumnInfo.capitalizePropertyName}(relation${tableInfo.keyColumnInfo.capitalizePropertyName});
           }));
        }
            #end
        #end
    #end
    }
#end

    /**
     * 修改
     */
    @Override
    public int update${tableInfo.capitalizeTableName}(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}) {
#if(${genValidMethod})
        this.saveOrUpdateValid(${tableInfo.tableName}${paramDTOConfig.filePost}, false, true);
#end
        ${tableInfo.capitalizeTableName}${entityConfig.filePost} ${tableInfo.tableName}${entityConfig.filePost} = this.paramToEntity(${tableInfo.tableName}${paramDTOConfig.filePost});
        return this.baseMapper.updateById(${tableInfo.tableName}${entityConfig.filePost});
    }

#if(${tableInfo.tableRelationships})
    /**
     * 修改${tableInfo.capitalizeTableName}和关联关系
     */
    @Transactional(rollbackFor = Exception.class)
    @Override
    public int update${tableInfo.capitalizeTableName}AndRelation(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}) {
#if(${genValidMethod})
        this.saveOrUpdateValid(${tableInfo.tableName}${paramDTOConfig.filePost}, false, true);
#end
        this.update${tableInfo.capitalizeTableName}Relation(${tableInfo.tableName}${paramDTOConfig.filePost});
        ${tableInfo.capitalizeTableName}${entityConfig.filePost} ${tableInfo.tableName}${entityConfig.filePost} = this.paramToEntity(${tableInfo.tableName}${paramDTOConfig.filePost});
        return this.baseMapper.updateById(${tableInfo.tableName}${entityConfig.filePost});
    }

    /**
     * 批量更新关联关系
     */
    private void update${tableInfo.capitalizeTableName}Relation(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}) {
    #foreach($relationTableInfo in ${tableInfo.tableRelationships})
            #if(${mybatisPlus})
                #if(${relationTableInfo.one2One})
                #*一对一 *#
        this.update${relationTableInfo.relationTable.capitalizeTableName}Relation(${tableInfo.tableName}${paramDTOConfig.filePost});
                #else
                #*一对多*#
        this.update${relationTableInfo.relationTable.capitalizeTableName}Relations(${tableInfo.tableName}${paramDTOConfig.filePost});
                #end
            #end
        #end
    }

#foreach($relationTableInfo in ${tableInfo.tableRelationships})
  #if(${mybatisPlus})
   #if(${relationTableInfo.one2One})
            #*一对一 *#
    private void update${relationTableInfo.relationTable.capitalizeTableName}Relation(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}) {
        ${tableInfo.keyColumnInfo.javaType.getSimpleName()} relation${tableInfo.keyColumnInfo.capitalizePropertyName} = ${tableInfo.tableName}${paramDTOConfig.filePost}.get${tableInfo.keyColumnInfo.capitalizePropertyName}();
        ${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost} ${relationTableInfo.relationTable.tableName}${entityConfig.filePost} = ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.getOne(Wrappers.<${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}>lambdaQuery().eq(${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::get${relationTableInfo.relationColumnInfo.capitalizePropertyName}, relation${tableInfo.keyColumnInfo.capitalizePropertyName}));
        ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.update(CommonBeanUtils.copyProperties(${tableInfo.tableName}${paramDTOConfig.filePost}.get${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}(),${relationTableInfo.relationTable.tableName}${entityConfig.filePost}));
    }
    #else
            #*一对多*#
    private void update${relationTableInfo.relationTable.capitalizeTableName}Relations(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}) {
        ${tableInfo.keyColumnInfo.javaType.getSimpleName()} relation${tableInfo.keyColumnInfo.capitalizePropertyName} = ${tableInfo.tableName}${paramDTOConfig.filePost}.get${tableInfo.keyColumnInfo.capitalizePropertyName}();
        List<${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}> new${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}List = ${tableInfo.tableName}${paramDTOConfig.filePost}.get${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}List();
        //如果新的没有 全部删除
        if (CollectionUtils.isEmpty(new${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}List)) {
            ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.remove(Wrappers.<${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}>lambdaQuery().eq(${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::get${relationTableInfo.relationColumnInfo.capitalizePropertyName}, relation${tableInfo.keyColumnInfo.capitalizePropertyName}));
            return;
        }
        List<${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}> old${relationTableInfo.relationTable.capitalizeTableName}Relations = ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.list(Wrappers.<${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}>lambdaQuery().eq(${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::get${relationTableInfo.relationColumnInfo.capitalizePropertyName}, relation${tableInfo.keyColumnInfo.capitalizePropertyName}));
        //如果没有旧的 全部插入
        if (CollectionUtils.isEmpty(old${relationTableInfo.relationTable.capitalizeTableName}Relations)) {
            ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.saveBatch(CommonBeanUtils.copyListProperties(new${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}List,${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::new,(s, t)-> {
              t.set${relationTableInfo.relationColumnInfo.capitalizePropertyName}(relation${tableInfo.keyColumnInfo.capitalizePropertyName});
            }));
            return;
        }
        List<${relationTableInfo.relationColumnInfo.javaType.getSimpleName()}> old${relationTableInfo.relationTable.capitalizeTableName}${relationTableInfo.relationColumnInfo.capitalizePropertyName}s = old${relationTableInfo.relationTable.capitalizeTableName}Relations.stream().filter(item -> item.get${relationTableInfo.relationColumnInfo.capitalizePropertyName}() != null).map(${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::get${relationTableInfo.relationColumnInfo.capitalizePropertyName}).collect(Collectors.toList());
        List<${relationTableInfo.relationColumnInfo.javaType.getSimpleName()}> new${relationTableInfo.relationTable.capitalizeTableName}${relationTableInfo.relationColumnInfo.capitalizePropertyName}s = new${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}List.stream().filter(item -> item.get${relationTableInfo.relationColumnInfo.capitalizePropertyName}() != null).map(${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}::get${relationTableInfo.relationColumnInfo.capitalizePropertyName}).collect(Collectors.toList());
        //插入
        for (${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost} ${relationTableInfo.relationTable.tableName} : new${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}List) {
            if (!old${relationTableInfo.relationTable.capitalizeTableName}${relationTableInfo.relationColumnInfo.capitalizePropertyName}s.contains(${relationTableInfo.relationTable.tableName}.get${relationTableInfo.relationColumnInfo.capitalizePropertyName}())) {
               ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.save(CommonBeanUtils.copyProperties(${relationTableInfo.relationTable.tableName}, ${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::new,(s, t)-> {
                t.set${relationTableInfo.relationColumnInfo.capitalizePropertyName}(relation${tableInfo.keyColumnInfo.capitalizePropertyName});
               }));
            }
        }
        //删除
        for (${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost} ${relationTableInfo.relationTable.tableName} : old${relationTableInfo.relationTable.capitalizeTableName}Relations) {
            if (!new${relationTableInfo.relationTable.capitalizeTableName}${relationTableInfo.relationColumnInfo.capitalizePropertyName}s.contains(${relationTableInfo.relationTable.tableName}.get${relationTableInfo.relationColumnInfo.capitalizePropertyName}())) {
                ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.removeById(${relationTableInfo.relationTable.tableName}.get${relationTableInfo.relationTable.keyColumnInfo.capitalizePropertyName}());
            }
        }
        //更新
        for (${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost} new${relationTableInfo.relationTable.capitalizeTableName} : new${relationTableInfo.relationTable.capitalizeTableName}${paramDTOConfig.filePost}List) {
            for (${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost} old${relationTableInfo.relationTable.capitalizeTableName} : old${relationTableInfo.relationTable.capitalizeTableName}Relations) {
                if (new${relationTableInfo.relationTable.capitalizeTableName}.get${relationTableInfo.relationColumnInfo.capitalizePropertyName}() != null && new${relationTableInfo.relationTable.capitalizeTableName}.get${relationTableInfo.relationColumnInfo.capitalizePropertyName}().equals(old${relationTableInfo.relationTable.capitalizeTableName}.get${relationTableInfo.relationColumnInfo.capitalizePropertyName}())) {
                    ${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost} ${relationTableInfo.relationTable.tableName}${entityConfig.filePost} = ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.getOne(Wrappers.<${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}>lambdaQuery().eq(${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::get${relationTableInfo.relationColumnInfo.capitalizePropertyName},relation${tableInfo.keyColumnInfo.capitalizePropertyName}));
                    CommonBeanUtils.copyProperties(new${relationTableInfo.relationTable.capitalizeTableName}, ${relationTableInfo.relationTable.tableName}${entityConfig.filePost},"${relationTableInfo.relationTable.keyColumnInfo.propertyName}");
                    ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.updateById(${relationTableInfo.relationTable.tableName}${entityConfig.filePost});
                }
            }
        }
    }
            #end
        #end
    #end
#end

    /**
     * 删除${tableInfo.capitalizeTableName}
     */
    @Override
    public int delete${tableInfo.capitalizeTableName}By${tableInfo.keyColumnInfo.capitalizePropertyName}(${tableInfo.keyColumnInfo.javaType.getSimpleName()} ${tableInfo.keyColumnInfo.propertyName}) {

    #if(${genValidMethod})
        this.deleteValid(${tableInfo.keyColumnInfo.propertyName});
    #end
        return this.baseMapper.deleteById(${tableInfo.keyColumnInfo.propertyName});
    }

#if(${tableInfo.tableRelationships})
    /**
     * 删除${tableInfo.capitalizeTableName}和关联关系
     */
    @Transactional(rollbackFor = Exception.class)
    @Override
    public int delete${tableInfo.capitalizeTableName}AndRelationBy${tableInfo.keyColumnInfo.capitalizePropertyName}(${tableInfo.keyColumnInfo.javaType.getSimpleName()} ${tableInfo.keyColumnInfo.propertyName}) {

    #if(${genValidMethod})
        this.deleteValid(${tableInfo.keyColumnInfo.propertyName});
    #end
        this.delete${tableInfo.capitalizeTableName}RelationBy${tableInfo.keyColumnInfo.capitalizePropertyName}(${tableInfo.keyColumnInfo.propertyName});
        return this.baseMapper.deleteById(${tableInfo.keyColumnInfo.propertyName});
    }

    /**
     * 批量删除关联关系
     */
    private void delete${tableInfo.capitalizeTableName}RelationBy${tableInfo.keyColumnInfo.capitalizePropertyName}(${tableInfo.keyColumnInfo.javaType.getSimpleName()} ${tableInfo.keyColumnInfo.propertyName}) {
    #foreach($relationTableInfo in ${tableInfo.tableRelationships})
        #if(!${mybatisPlus})
        this.baseMapper.delete${tableInfo.capitalizeTableName}By${relationTableInfo.relationColumnInfo.capitalizePropertyName}(${tableInfo.keyColumnInfo.propertyName})
        #else
        ${relationTableInfo.relationTable.tableName}${serviceInterfaceConfig.filePost}.remove(Wrappers.<${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}>lambdaQuery().eq(${relationTableInfo.relationTable.capitalizeTableName}${entityConfig.filePost}::get${relationTableInfo.relationColumnInfo.capitalizePropertyName},${tableInfo.keyColumnInfo.propertyName}));
        #end
    #end
    }
#end

#if(${genValidMethod})
     private void deleteValid(${tableInfo.keyColumnInfo.javaType.getSimpleName()} ${tableInfo.keyColumnInfo.propertyName}) {

     }

     private void saveOrUpdateValid(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost} ,boolean save,boolean update) {

     }
#end

    private ${tableInfo.capitalizeTableName}${entityConfig.filePost} paramToEntity(${tableInfo.capitalizeTableName}${paramDTOConfig.filePost} ${tableInfo.tableName}${paramDTOConfig.filePost}) {
        return CommonBeanUtils.copyProperties(${tableInfo.tableName}${paramDTOConfig.filePost}, ${tableInfo.capitalizeTableName}${entityConfig.filePost}::new);
    }

    private ${tableInfo.capitalizeTableName}${resultDTOConfig.filePost} entityTo${resultDTOConfig.filePost}(${tableInfo.capitalizeTableName}${entityConfig.filePost} ${tableInfo.tableName}${entityConfig.filePost}) {
        return CommonBeanUtils.copyProperties(${tableInfo.tableName}${entityConfig.filePost}, ${tableInfo.capitalizeTableName}${resultDTOConfig.filePost}::new);
    }



}
